# -*- coding: utf-8 -*-
"""EnergyHack_SerenaSk.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I0E87E_rK9TbqCVtqKzpbExjeIOSbdjO

Решение было реализовано в среде программирования Google Colab.
Ссылка на решение: https://colab.research.google.com/drive/1I0E87E_rK9TbqCVtqKzpbExjeIOSbdjO?usp=sharing

Установим необходимую для построения интерактивной визуализации библиотеку plotly.
"""

!pip install plotly

"""Также подгрузим уже доступные библиотеки pandas и numpy."""

import pandas as pd
import plotly.express as px
import numpy as np

"""Сохраним данные о расположении ТП, бизнес центрах, зарядных станциях, парковочных местах и запланированных зарядных станциях в нашу среду программирования."""

tp = pd.read_csv('tp.csv', delimiter=";", decimal=",")
bc = pd.read_csv('bc.csv', delimiter=";", decimal=",")
cs = pd.read_csv('cs.csv', delimiter=";", decimal=",")
pl = pd.read_csv('pl.csv', delimiter=";", decimal=",")
pcs = pd.read_csv('pcs.csv', delimiter=";", decimal=",")

"""Смоделируем возможный резерв мощности каждой имеющейся подстанции."""

tp['Резерв мощности ПС'] = 0.4 + np.random.random(len(tp))

"""Отобразим карту рассматриваемой местности, на нее нанесем имеющиеся объекты. Для подстанций так же условно укажем область, которую питает каждая подстанция."""

fig = go.Figure()

fig.add_trace(go.Scattermapbox(
        lat=tp.lat,
        lon=tp.lon,
        mode='markers',
        marker=go.scattermapbox.Marker(
            size=230,
            opacity=0.2,
            color='rgba(0, 205, 0, 1)'
        ),
        text=list('Резерв мощности ПС ' + str(round(i, 2)) + ' МВА' for i in tp['Резерв мощности ПС'])
    ))

fig.add_trace(go.Scattermapbox(
        lat=pd.concat([tp.lat, bc.lat, cs.lat, pcs.lat, pl.lat]),
        lon=pd.concat([tp.lon, bc.lon, cs.lon, pcs.lon, pl.lon]),
        mode='markers',
        marker=go.scattermapbox.Marker(
            size=15,
            color='black'
        )
    ))

fig.add_trace(go.Scattermapbox(
        lat=tp.lat,
        lon=tp.lon,
        mode='markers',
        marker=go.scattermapbox.Marker(
            size=12,
            color='rgba(0, 255, 0, 1)'
        ),
        text=list('Резерв мощности ПС ' + str(round(i, 2)) + ' МВА' for i in tp['Резерв мощности ПС'])
    ))

fig.add_trace(go.Scattermapbox(
        lat=bc.lat,
        lon=bc.lon,
        mode='markers',
        marker=go.scattermapbox.Marker(
            size=12,
            color='rgba(204, 96, 208, 1)'
        ),
        text='Бизнес центр'
    ))

fig.add_trace(go.Scattermapbox(
        lat=cs.lat,
        lon=cs.lon,
        mode='markers',
        marker=go.scattermapbox.Marker(
            size=12,
            color='rgba(102, 102, 255, 1)'
        ),
        text='Зарядная станция'
    ))

fig.add_trace(go.Scattermapbox(
        lat=pl.lat,
        lon=pl.lon,
        mode='markers',
        marker=go.scattermapbox.Marker(
            size=12,
            color='rgba(255, 102, 102, 1)'
        ),
        text='Парковочное место'
    ))

fig.add_trace(go.Scattermapbox(
        lat=pcs.lat,
        lon=pcs.lon,
        mode='markers',
        marker=go.scattermapbox.Marker(
            size=12,
            color='rgba(255, 255, 0, 1)'
        ),
        text='Запланированная зарядная станция'
    ))

fig.update_layout(
    height=800,
    width = 1500,
    autosize=True,
    showlegend=False,
    mapbox=dict(
        accesstoken='pk.eyJ1IjoiY21iY2tzcmwiLCJhIjoiY2t1am1jNWhhMTQ3aTMybXkyeXl2YmtteCJ9.WmkEchjBDj5hWovSthIwWQ',
        zoom=13,
        style='open-street-map',
        center=dict(
            lat=55.76127,
            lon=37.59367)
    ),

)

fig.show()

















